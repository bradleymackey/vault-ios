import Foundation
import OTPCore

/// An `OTPAuthCode` retrieved from storage.
///
/// Includes the unique ID used to identify this code.
public struct StoredOTPCode: Equatable, Identifiable {
    /// A unique ID to identify this specific `code`.
    ///
    /// This should be generated by the storage layer.
    public var id: UUID
    public var created: Date
    public var updated: Date
    /// User-provided description about the code.
    public var userDescription: String?
    /// The stored code value.
    public var code: GenericOTPAuthCode

    public init(id: UUID, created: Date, updated: Date, userDescription: String?, code: GenericOTPAuthCode) {
        self.id = id
        self.created = created
        self.updated = updated
        self.userDescription = userDescription
        self.code = code
    }

    /// Maps this object to a `StoredOTPCode.Write` for writing.
    public var asWritable: StoredOTPCode.Write {
        .init(userDescription: userDescription, code: code)
    }
}

public extension StoredOTPCode {
    /// Model used for creating or updating a new `StoredOTPCode`, where the `id` is predetermined/generated randomly.
    struct Write {
        public var userDescription: String?
        public var code: GenericOTPAuthCode

        public init(userDescription: String? = nil, code: GenericOTPAuthCode) {
            self.userDescription = userDescription
            self.code = code
        }
    }
}
